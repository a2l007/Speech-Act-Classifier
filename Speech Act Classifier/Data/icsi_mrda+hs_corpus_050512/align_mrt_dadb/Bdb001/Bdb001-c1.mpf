                SEGMENT PUNCTUATION
           WORD   MRT   MRT  DADB  
-----------------------------------
             Oh     0     ,     |
              I     0     0     0
       remember     0     0     0
         seeing     0     0     0
             an     0     0     0
        example     0     0     0
             of     0     0     0
           this     0     .     .
           Yeah     #     .     .
            Mmm     #     .     .
             So     0     0     0
         you're     0     0     0
    essentially     0     0     0
       defining     0     0     0
              a     0     0     0
        lattice     #     .     .
           Yeah     #     .     .
           How-     0     0     -
           how-     #     0    ==
             Oh     0     ,     0
         that's     #     -    ==
         That's     0     0     0
       actually     0     0     0
           very     0     0     0
         nicely     0     0     0
        handled     0     0     0
           here     0     0     .
        because     0     0     0
            you     0     0     0
          could     0     -     -
            you     0     0     0
          could     0     -     -
            all     0     0     0
          you'd     0     0     0
           have     0     0     0
             to     0     0     0
         change     0     0     0
             is     0     0     0
            the     #     ,     0
             um     0     ,     0
    time-stamps     0     0     0
             in     0     0     0
            the     0     0     0
      time-line     0     0     0
        without     0     -     -
        without     0     ,     0
             uh     0     ,     0
       changing     0     0     0
            the     0     0     0
           I_Ds     #     .     .
         Except     0     0     0
            the     0     0     0
      time-line     0     0     0
             is     0     0     0
          gonna     0     0     0
             be     0     0     0
           huge     0     .     .
             If     0     0     0
            you     0     0     0
            say     0     -    ==
        suppose     0     0     0
            you     0     0     0
           have     0     0     0
              a     0     0     0
    phone-level     0     0     0
      alignment     0     .     .
          You'd     0     0     0
           have     0     -     -
          you'd     0     0     0
           have     #     -    ==
           Why-     #     0    ==
            Mmm     0     .     .
            But     0     -     -
            but     0     0     0
            why     0     0     0
            not     0     0     0
            use     0     0     0
             it     0     0     0
            for     0     0     0
    phone-level     0     ?     ?
           It's     0     0     0
           just     0     0     0
              a     0     0     0
         matter     0     0     0
             of     0     -     -
           it's     0     0     0
           just     0     0     0
              a     0     0     0
         matter     0     0     0
             of     0     0     0
             it     0     0     0
          being     0     0     0
         bigger     0     .     .
            But     0     0     0
             if     0     0     0
            you     0     0     0
           have     #     -    ==
            you     0     0     0
           know     0     ,     0
        barring     0     0     0
         memory     0     0     0
    limitations     0     ,     0
            or-     0     0     -
             uh     0     -     -
             I-     0     0     -
             w-     0     0     -
              I     0     0     0
           mean     0     0     0
           this     0     0     0
             is     0     0     0
          still     0     0     0
            the     0     0     0
             m-     #     0    ==
             Oh     0     ,     0
             no     0     .     .
            You     0     0     0
          would     0     0     0
            use     0     0     0
             it     0     0     0
           only     0     0     0
            for     0     0     0
       purposes     0     0     0
          where     0     0     0
            you     0     0     0
       actually     0     0     0
           want     0     0     0
            the     0     0     0
    phone-level     0     0     0
    information     0     ,     0
            I'd     0     0     0
        imagine     #     .     .
            You     #     -    ==
         Mm-hmm     #     .     .
             Or     0     0     0
            you     0     0     0
           just     0     0     0
        compre-     0     0    ==
              I     0     0     0
           mean     0     ,     0
              I     0     0     0
           like     0     0     0
           text     0     0     0
        formats     0     .     .
             Um     0     ,    ==
             b-     0     0     -
            you     0     0     0
            can     0     0     0
         always     0     ,     0
             uh     0     ,     0
          G_zip     0     0     0
           them     #     ,     .
            and     0     ,     0
             um     0     ,     |
            you     0     0     0
           know     0     ,     0
             c-     0     0     -
     decompress     0     0     0
           them     0     0     0
             on     0     0     0
            the     0     0     0
            fly     0     0     0
             if     0     0     0
             y-     0     0     -
             if     0     0     0
          space     0     0     0
             is     0     0     0
         really     0     0     0
              a     0     0     0
        concern     #     .     .
          Right     0     ,     .
            O_K     0     .     .
              I     0     0     0
          would     0     0     0
            say     0     -    ==
            O_K     0     ,     |
             so     0     0     0
    frame-level     0     0     0
             is     0     0     0
       probably     0     0     0
            not     0     0     0
              a     0     0     0
           good     0     0     0
           idea     0     .     .
            But     0     0     0
            for     0     0     0
    phone-level     0     0     0
          stuff     0     0     0
           it's     0     0     0
      perfectly     #     -    ==
           Like     0     0     0
         phones     0     ,     0
             or     0     0     0
      syllables     0     ,     0
             or     0     0     0
       anything     0     0     0
           like     0     0     0
           that     #     .     .
            But     0     -     -
            but     0     -     -
            but     0     0     0
           most     0     0     0
             of     0     0     0
            the     0     0     0
         frames     0     0     0
            are     0     0     0
       actually     0     0     0
            not     0     0     0
         speech     #     .     .
             So     0     ,    ==
            you     0     0     0
           know     0     ,     0
         people     0     0     0
          don't     #     -    ==
             v-     0     0     -
           Look     0     0     0
             at     0     0     0
             it     0     ,     0
          words     0     0     0
          times     0     0     0
            the     0     0     0
        average     0     -     -
            The     0     0     0
        average     0     0     0
         number     0     0     0
             of     0     0     0
         phones     0     0     0
             in     0     0     0
             an     0     0     0
        English     0     0     0
           word     0     0     0
             is     0     ,     0
              I     0     0     0
          don't     0     0     0
           know     0     ,     0
           five     0     0     0
          maybe     #     ?     ?
             So     0     ,     0
           look     0     0     0
             at     0     0     0
             it     0     ,     0
             t-     0     0     -
         number     0     0     0
             of     0     0     0
          words     0     0     0
          times     0     0     0
           five     0     .     .
         That's     0     0     0
            not     0     -     -
           that     0     0     0
            not     #     -    ==
        Exactly     0     .     .
           Yeah     #     .     .
              I     0     0     0
           mean     0     ,     0
           I've     0     -     -
           I've     0     0     0
           used     0     0     0
           them     0     .     .
              I     0     0     0
          don't     0     0     0
           know     0     0     0
           what     0     0     0
          their     0     0     0
      structure     0     0     0
             is     0     .     .
           I've     0     0     0
         forgot     0     0     0
           what     0     0     0
            the     0     0     0
           str-     #     0    ==
            Hmm     #     .     .
           Yeah     0     ,     .
            th-     0     0     -
             we     0     0     0
           have     #     -    ==
       Actually     0     ,     0
             we     0     -     -
             we     0     0     0
            use     0     0     0
              a     0     0     0
 generalization     0     0     0
             of     0     0     0
            the     0     -     -
            the     0     0     0
         Sphere     0     0     0
         format     #     .     .
             Um     0     ,    ==
            but     #     -    ==
           Yeah     0     ,     0
             so     0     0     0
          there     0     0     0
             is     0     0     0
      something     0     0     0
           like     0     0     0
           that     0     0     .
            but     0     0     0
           it's     0     ,     0
             um     0     ,     0
       probably     0     0     0
            not     0     0     0
             as     0     0     0
       sophist-     #     0    ==
           They     0     0     0
            ha-     0     0     -
             it     0     0     0
            has     0     0     0
            its     0     0     0
            own     #     -    ==
              I     0     0     0
           mean     0     ,     0
       Entropic     0     0     0
            has     0     0     0
          their     0     0     0
            own     0     0     0
        feature     0     0     0
         format     0     0     0
         that's     0     0     0
         called     0     ,     0
           like     0     ,     0
            S_-     0     0     -
            S_D     0     0     0
             or     0     0     0
           some     0     0     0
            so-     0     0     -
            S_F     0     0     0
             or     0     0     0
      something     0     0     0
           like     0     0     0
           that     #     .     .
            Hmm     #     ?     ?
          Right     #     .     .
            Mmm     #     .     .
             Do     0     0     0
           they     0     0     0
        already     0     0     0
           have     0     0     0
          tools     #     ?     ?
             As     0     0     0
           long     0     0     0
             as     0     0     0
             uh     0     0     0
           each     0     0     0
            tag     0     0     0
             is     0     0     0
             on     0     0     0
            one     0     0     0
           line     #     .     .
            Hmm     #     .     .
             If     0     0     0
             we     0     0     0
           want     0     0     0
             to     #     -    ==
             Do     0     0     0
           they     0     0     0
        already     0     0     0
           have     0     0     0
      something     0     0     0
         that's     0     -     -
           that     0     0     0
          would     0     0     0
             be     0     0     0
         useful     0     0     0
            for     0     0     0
             us     0     0     0
             in     0     0     0
          place     #     ?     ?
             @@     0     0     0
             We     0     0     0
         should     0     -     -
             we     0     0     0
         should     0     0     0
           find     0     0     0
            out     #     .     .
           It's     0     0     0
              a     0     0     0
         hassle     #     0     .
             if     #     -    ==
              I     0     -     -
              I     0     0     0
          think     0     0     0
             if     0     0     0
           it's     0     0     0
   conceptually     0     0     0
          close     0     ,     0
            and     0     0     0
           they     0     0     0
        already     0     0     0
           have     0     0     0
             or     0     0     0
           will     0     0     0
           have     0     0     0
          tools     0     0     0
           that     0     0     0
      everybody     0     0     0
           else     0     0     0
           will     0     0     0
             be     0     0     0
          using     0     ,     0
              I     0     0     0
           mean     #     ,     0
             it     0     0     0
          would     0     0     0
             be     0     0     0
          crazy     0     0     0
             to     0     0     0
             do     0     0     0
      something     0     0     0
             s-     0     0     -
            you     0     0     0
           know     0     ,     0
       separate     0     0     0
           that     #     -    ==
             It     0     0     0
          seems     0     0     0
             to     0     0     0
             me     0     0     0
            you     0     0     0
           want     0     0     0
             to     0     0     0
           keep     0     0     0
            the     0     0     0
    frame-level     0     0     0
          stuff     0     0     0
       separate     #     .     .
            And     0     0     0
           then     #     -    ==
            Now     0     -     -
            now     0     0     0
            how     0     0     0
          would     0     0     0
            you     #     -     -
            how     0     0     0
          would     0     0     0
            you     0     0     0
      represent     0     ,     0
             um     0     ,     0
       multiple     0     0     0
       speakers     0     0     0
             in     0     0     0
           this     0     0     0
      framework     0     ?     ?
           Were     0     -     -
            You     0     0     0
          would     0     0     0
           just     0     0     0
      represent     0     0     0
           them     0     0     0
             as     #     -    ==
            You     0     0     0
          would     0     0     0
           have     0     0     0
           like     0     0     0
              a     0     0     0
        speaker     0     0     0
            tag     0     0     0
             or     0     0     0
      something     #     ?     ?
         Mm-hmm     #     .     .
            O_K     #     .     .
         Mm-hmm     #     .     .
             Is     0     0     0
             i-     #     ?   - ?
           Well     0     ,     0
        channel     0     0     0
             or     0     0     0
        speaker     0     0     0
             or     0     0     0
       whatever     0     .     .
             It     0     0     0
        doesn't     #     -    ==
          Right     0     .     .
            But     0     -     -
            but     0     -   - |
             so     0     0     0
            how     0     0     0
             in     0     0     0
            the     0     0     0
           NIST     0     0     0
         format     0     0     0
             do     0     0     0
             we     0     0     0
        express     #     0     0
              a     0     0     0
   hierarchical     0     0     0
   relationship     0     0     0
        between     0     ,     0
             um     0     ,     0
            say     0     ,     0
             an     0     0     0
      utterance     0     0     0
            and     0     0     0
            the     0     0     0
          words     0     0     0
         within     0     0     0
             it     #     ?     ?
             So     0     0     0
            how     0     0     0
             do     0     0     0
            you     0     0     0
           tell     0     0     0
           that     0     0     0
          these     0     0     0
            are     0     0     0
            the     0     0     0
          words     0     0     0
           that     0     0     0
         belong     0     0     0
             to     0     0     0
           that     0     0     0
      utterance     #     ?     ?
         Mm-hmm     #     .     .
            O_K     #     .     .
             So     #     -    ==
             So     0     0     0
         here's     0     0     0
            the     0     0     0
          thing     0     .     .
             Um     #     -    ==
            Hhh     #     .     .
           Well     0     ,     0
            the     0     0     0
          thing     #     -    ==
            the     0     0     0
          thing     0     0     0
             is     0     0     0
           that     0     0     0
          some-     0     0     -
      something     0     0     0
            may     0     0     0
             be     0     0     0
              a     0     0     0
           part     0     0     0
             of     #     0     0
            one     0     0     0
          thing     0     0     0
            for     0     0     0
            one     0     0     0
        purpose     0     0     0
            and     0     0     0
        another     0     0     0
          thing     0     0     0
             of     0     0     0
        another     0     0     0
        purpose     #     .     .
             So     0     0     0
             f-     #     0    ==
             s-     #     0    ==
             Um     0     ,    ==
           well     0     ,     .
             s-     0     0     -
          let's     0     -     -
          let's     0     0     0
            ta-     0     0     -
             so     0     0     0
          let's     #     -    ==
             so     #     -    ==
             y-     0     0     -
             So     0     0     0
            for     0     0     0
       instance     0     0     0
             @@     0     0     0
           sup-     #     0    ==
        Suppose     0     0     0
            you     0     0     0
           have     0     0     0
              a     0     0     0
           word     0     0     0
       sequence     0     0     .
            and     0     0     0
            you     0     0     0
           have     0     0     0
            two     0     0     0
      different     0     0     0
  segmentations     0     0     0
             of     0     0     0
           that     0     0     0
           same     0     0     0
           word     0     0     0
       sequence     0     .     .
             f-     0     0     -
            Say     0     ,     0
            one     0     0     0
   segmentation     0     0     0
             is     0     0     0
             in     0     0     0
          terms     0     0     0
             of     #     ,     0
             um     #     ,     0
            you     0     0     0
           know     0     ,     0
             uh     0     ,     0
      sentences     0     .     .
            And     0     0     0
        another     0     0     0
   segmentation     0     0     0
             is     0     0     0
             in     0     0     0
          terms     0     0     0
             of     0     ,     0
             um     0     ,     0
              I     0     0     0
          don't     0     0     0
           know     0     ,     0
       prosodic     0     0     0
        phrases     #     .     .
            And     0     0     0
          let's     0     0     0
            say     0     0     0
           that     0     0     0
           they     0     0     0
          don't     0     0     0
           nest     0     .     .
             So     0     ,     |
            you     0     0     0
           know     0     ,     0
              a     0     0     0
       prosodic     0     0     0
         phrase     0     0     0
            may     0     0     0
          cross     #     0     0
            two     0     0     0
      sentences     0     0     0
             or     0     0     0
      something     0     .     .
              I     0     0     0
          don't     0     0     0
           know     0     0     0
             if     0     0     0
         that's     0     0     0
           true     0     0     0
             or     0     0     0
            not     0     0     .
            but     0     0     |
          let's     0     0     0
            as-     #     0    ==
          Right     #     .     .
           Yeah     #     .     .
             So     0     ,     0
            you     0     0     0
           want     0     0     0
             to     0     0     0
             be     0     0     0
             s-     0     0     -
            you     0     0     0
           want     0     0     0
             to     0     0     0
            say     0     0     0
           this     0     -     -
           this     0     0     0
           word     0     0     0
             is     0     0     0
           part     0     0     0
             of     0     0     0
           that     0     0     0
       sentence     0     0     0
            and     0     0     0
           this     0     0     0
       prosodic     0     0     0
         phrase     #     .     .
            But     0     0     0
            the     0     0     0
         phrase     0     0     0
             is     0     0     0
            not     0     0     0
           part     0     0     0
             of     0     0     0
            the     0     0     0
       sentence     0     0     .
            and     0     0     0
        neither     0     0     0
             is     0     0     0
            the     0     0     0
       sentence     0     0     0
           part     0     0     0
             of     0     0     0
            the     0     0     0
         phrase     #     .     .
             So     0     ,     |
            you     0     0     0
          would     0     0     0
           have     0     0     0
             to     0     0     0
           have     0     0     0
            two     0     0     0
      different     0     0     0
       pointers     0     0     0
           from     0     0     0
            the     0     0     0
           word     0     0     0
             up     0     -     -
            one     0     0     0
          level     0     0     0
             up     0     ,     .
            one     0     0     0
             to     0     0     0
            the     0     0     0
          sent-     #     0    ==
             @@     0     0     0
          Right     #     .     .
          Right     #     .     .
         Mm-hmm     #     .     .
            The     0     -     -
            the     0     0     0
             o-     0     0     -
            the     0     0     0
          other     0     0     0
          issue     0     0     0
           that     0     0     0
            you     0     0     0
            had     0     0     0
            was     0     ,     0
            how     0     0     0
             do     0     0     0
            you     0     0     0
       actually     0     0     0
    efficiently     0     0     0
        extract     0     ,     0
             um     #     -     -
           find     0     0     0
            and     0     0     0
        extract     0     0     0
    information     0     0     0
             in     0     0     0
              a     0     0     0
      structure     0     0     0
             of     0     0     0
           this     0     0     0
           type     #     ?     .
             So     0     0     |
            you     0     0     0
           gave     0     0     0
           some     0     0     0
       examples     0     0     0
           like     #     -    ==
             No     0     ,     |
         that's     0     0     0
            not     0     0     0
          clear     0     .     .
              I     0     0     0
           mean     0     ,     0
           yeah     0     ,     0
            you     0     0     0
             c-     0     0     -
           sure     0     0     0
            you     0     0     0
            can     0     0     0
             do     0     0     0
             it     0     ,     .
            but     0     0     0
            can     0     0     0
            you     0     0     0
             do     0     0     0
             it     #     0     0
           sort     0     0     0
             of     0     0     0
             l-     0     0     -
             l-     0     0     -
            you     0     0     0
           know     #     ,     0
             it     #     -    ==
             y-     0     0     -
             y-     0     0     -
            you     0     0     0
          gotta     0     -     -
            you     0     0     0
          gotta     0     0     0
             do     0     0     0
           this     0     -     -
            you     0     -     -
         you're     0     0     0
          gonna     0     0     0
           want     0     0     0
             to     0     0     0
             do     0     0     0
           this     0     0     0
           very     0     0     0
        quickly     #     0     .
             or     0     0     0
           else     0     0     0
         you'll     0     0     0
          spend     0     0     0
            all     0     0     0
           your     0     0     0
           time     0     0     0
           sort     0     0     0
             of     0     0     0
      searching     0     0     0
        through     0     0     0
           very     0     0     0
        complex     0     0     0
           data     0     0     0
     structures     #     -     .
           Yeah     #     .     .
            You     0     0     0
           want     0     0     0
           sort     0     0     0
             of     0     0     0
              a     0     0     0
           grep     0     0     0
         that's     0     -     -
           that     0     0     0
          works     0     0     0
             at     0     0     0
            the     0     0     0
     structural     #     -     -
             on     0     0     0
            the     0     0     0
     structural     0     0     0
 representation     #     .     .
           Yeah     0     ,     |
            but     0     0     0
           it's     0     -     -
           it's     0     0     0
            not     0     0     0
          clear     0     0     0
           that     0     0     0
         that's     #     -    ==
         That's     0     0     0
       relative     0     0     0
             to     0     0     0
            the     0     0     0
      structure     0     0     0
             of     0     0     0
            the     0     0     0
          X_M_L     0     0     0
       document     0     ,     .
            not     0     0     0
             to     0     0     0
            the     0     0     0
      structure     0     0     0
             of     0     0     0
           what     0     0     0
         you're     0     0     0
   representing     0     0     0
             in     0     0     0
            the     0     0     0
       document     #     .     .
          Right     #     .     .
          Right     #     .     .
            Be-     #     0    ==
        Because     0     0     0
           here     0     0     0
         you're     0     0     0
     specifying     0     0     0
              a     0     0     0
        lattice     0     .     .
             So     0     0     0
            the     0     0     0
     underlying     #     -     -
         that's     0     0     0
            the     0     0     0
     underlying     0     0     0
           data     0     0     0
      structure     0     .     .
            And     0     0     0
            you     0     0     0
           want     0     0     0
             to     0     0     0
             be     0     0     0
           able     0     0     0
             to     0     0     0
         search     0     0     0
             in     0     0     0
           that     0     0     0
        lattice     #     .     .
         That's     0     0     0
      different     0     0     0
           from     0     0     0
      searching     0     0     0
        through     0     0     0
            the     0     0     0
           text     #     .     .
             Um     #     -    ==
            Hhh     #     .     .
            Hmm     #     .     .
            But     #     -    ==
            Hmm     #     .     .
            But     0     0     0
           this     0     0     0
             is     0     -    ==
              I     0     -     -
            I'm     0     0     0
          still     0     ,     0
             um     #     ,     0
            not     0     0     0
      convinced     0     0     0
           that     0     0     0
            you     0     0     0
            can     0     0     0
             do     0     0     0
           much     0     0     0
             at     0     0     0
            all     0     0     0
             on     0     0     0
            the     0     0     0
           text     0     -     -
             on     0     0     0
            the     0     0     0
           flat     0     0     0
           file     0     0     0
           that     0     -     -
           that     0     -     -
            you     0     0     0
           know     0     ,     0
            the     0     0     0
           text     0     0     0
 representation     #     .     .
             e-     #     0    ==
        Because     0     0     0
            the     0     0     0
           text     0     0     0
 representation     0     0     0
             is     0     0     0
          gonna     0     0     0
             be     #     ,     0
             uh     0     ,     0
            not     0     0     0
     reflecting     0     0     0
            the     0     0     0
      structure     0     0     0
             of     0     -     -
             of     0     0     0
           your     0     0     0
          words     0     0     0
            and     0     0     0
    annotations     #     .     .
           It's     0     0     0
           just     0     -     -
           it's     #     -    ==
             No     0     .     .
            You     0     -     -
            you     0     0     0
           have     0     0     0
             to     0     -    ==
           what     0     0     0
            you     0     0     0
           have     0     0     0
             to     0     0     0
             do     0     0     0
             is     0     0     0
            you     0     0     0
           have     0     0     0
             to     0     0     0
      basically     #     -    ==
             Y-     0     0     -
           yeah     0     .     0
            You     0     0     0
            can     0     0     0
            use     0     0     0
           Perl     0     0     0
             to     0     0     0
           read     0     0     0
             it     0     0     0
             in     0     0     0
            and     0     0     0
      construct     0     0     0
              a     0     0     0
       internal     0     0     0
 representation     0     0     0
           that     0     0     0
             is     0     0     0
    essentially     0     0     0
              a     0     0     0
        lattice     #     .     .
            But     #     ,     0
            the     0     -    ==
            and     0     0     0
           then     #     -    ==
          Right     #     .     .
            But     0     0     0
         that's     0     0     0
           what     0     0     0
         you'll     0     0     0
           have     0     0     0
             to     0     0     0
             do     #     .     .
           Bec-     0     0     -
            be-     #     0    ==
             Oh     0     ,     0
          maybe     #     -    ==
             um     #     -    ==
           Well     #     -    ==
            Ma-     0     0    ==
           well     0     ,     0
          maybe     0     0     0
            you     0     0     0
         should     0     0     0
       actually     0     0     0
           look     0     0     0
             at     0     0     0
             it     0     0     0
       yourself     0     0     0
            too     0     0     0
             to     0     0     0
            get     0     0     0
              a     0     0     0
          sense     0     0     0
             of     #     0     0
           what     0     0     0
             it     0     0     0
             is     0     0     0
         you'll     0     -     -
         you'll     0     0     0
             be     0     0     0
        dealing     0     0     0
           with     0     ,     .
        because     #     ,     0
             um     #     ,     0
            you     0     0     0
           know     0     ,     0
           Adam     0     0     0
          might     0     0     0
           have     0     0     0
            one     0     0     0
        opinion     0     0     0
            but     0     0     0
            you     0     0     0
          might     0     0     0
           have     0     0     0
        another     0     ,     .
             so     #     0    ==
              I     0     0     0
          think     0     0     0
            the     0     0     0
           more     0     0     0
           eyes     0     0     0
           look     0     0     0
             at     0     0     0
           this     0     0     0
            the     0     0     0
         better     #     .     .
            Mmm     #     .     .
             Is     0     0     0
          there     0     0     0
             an     0     -     -
             is     0     0     0
          there     0     0     0
             an     0     0     0
           I_P-     0     0     -
          A_P_I     #     ?     ?
            O_K     #     .     .
          There     0     0     0
           used     0     0     0
             to     0     0     0
             be     0     0     0
              a     0     0     0
        problem     0     0     0
           that     0     0     0
           they     0     0     0
            get     0     0     0
            too     0     0     0
          large     #     ,     .
            and     0     0     0
             so     0     0     0
      basically     0     0     0
            the     0     -     -
             uh     0     0     0
            the     0     0     0
     filesystem     #     0     0
       wouldn't     #     -    ==
          Maybe     0     0     0
            you     0     0     0
          could     0     0     0
         extend     0     0     0
            the     0     0     0
          A_P_I     0     0     0
             to     0     ,     0
             uh     0     ,     0
        support     0     ,     0
             uh     0     ,     0
           like     0     0     0
      splitting     0     0     0
             up     #     ,     0
            you     0     0     0
           know     0     ,     0
   conceptually     0     0     0
            one     0     0     0
           file     0     0     0
           into     0     0     0
        smaller     0     0     0
          files     0     0     0
             on     0     0     0
           disk     0     0     .
             so     0     0     0
           that     0     0     0
            you     0     0     0
            can     0     0     0
    essentially     #     ,     0
            you     0     0     0
           know     0     ,     0
           have     0     0     0
    arbitrarily     0     0     0
           long     0     0     0
             f-     #     0    ==
           Yeah     #     .     .
            O_K     #     .     .
           What     0     0     0
           does     0     0     0
            the     0     0     0
             P_     0     0     0
          stand     0     0     0
            for     0     0     0
         anyway     #     ?     ?
             No     0     ,     |
        P_files     0     0     0
           were     0     0     0
         around     0     0     0
            way     0     0     0
         before     0     0     0
       Quicknet     #     .     .
        P_files     0     0     0
           were     0     -     -
           were     0     0     0
         around     0     0     0
           when     0     -     -
             w-     0     0     -
           with     0     ,     0
             um     0     ,     0
            RAP     #     .     .
          Right     #     ?     ?
            You     0     0     0
         worked     0     0     0
           with     0     0     0
        P_files     0     .     .
              I     0     0     0
         worked     0     0     0
           with     0     0     0
        P_files     #     .     .
             No     #     .     .
           Yeah     #     .     .
             @@     #     0     .
             j-     0     0     -
              I     0     0     0
          think     0     0     0
        there's     #     -    ==
            Mmm     #     .     .
         Mm-hmm     #     .     .
             Um     #     ,    ==
             it     0     0     0
          would     0     0     0
             be     0     0     0
           nice     0     -    ==
             um     #     ,    ==
             eh     0     ,     0
            gr-     0     0     -
           this     0     0     0
             is     0     0     0
           sort     0     0     0
             of     0     0     0
             r-     0     0     -
      regarding     #     -     -
             uh     0     ,     0
             uh     0     0     0
           it's     0     0     0
        related     0     0     0
            but     0     0     0
            not     0     0     0
       directly     0     0     0
        germane     0     0     0
             to     0     0     0
            the     0     0     0
          topic     0     0     0
             of     0     0     0
     discussion     0     ,     .
            but     0     ,     0
           when     0     0     0
             it     0     0     0
          comes     0     0     0
             to     0     0     0
    annotations     0     ,     0
             um     #     ,     0
            you     0     0     0
          often     0     0     0
           find     0     0     0
       yourself     0     0     0
             in     0     0     0
            the     0     0     0
      situation     0     0     0
          where     0     0     0
            you     0     0     0
           have     0     0     0
      different     0     0     0
    annotations     0     0     0
             of     0     0     0
            the     0     0     0
           same     0     ,     0
            say     0     ,     0
           word     0     0     0
       sequence     #     .     .
            O_K     0     ?     ?
            And     0     0     0
      sometimes     0     0     0
            the     0     0     0
           word     0     0     0
      sequences     0     0     0
           even     0     0     0
         differ     0     0     0
       slightly     0     0     0
        because     0     0     0
           they     0     0     0
           were     0     0     0
         edited     0     0     0
             s-     0     0     -
             at     0     0     0
            one     0     0     0
          place     0     0     0
            but     0     0     0
            not     0     0     0
            the     0     0     0
          other     #     .     .
             So     0     ,     0
           once     0     0     0
           this     0     0     0
           data     0     0     0
           gets     0     0     0
            out     0     0     0
          there     0     ,     0
           some     0     0     0
         people     0     0     0
          might     0     0     0
          start     0     0     0
     annotating     0     0     0
           this     0     0     0
            for     #     ,     0
              I     0     0     0
          don't     0     0     0
           know     0     ,     0
       dialogue     0     0     0
           acts     0     0     0
             or     0     ,     0
             um     #     ,     0
            you     0     0     0
           know     0     ,     0
         topics     0     0     0
             or     0     0     0
           what     0     0     0
            the     0     0     0
           heck     0     .     .
            You     0     0     0
           know     0     ,     .
        there's     0     0     0
              a     0     0     0
        zillion     0     0     0
         things     0     0     0
           that     0     0     0
         people     0     0     0
          might     0     0     0
       annotate     0     0     0
           this     0     0     0
            for     #     .     .
            And     0     0     0
            the     0     0     0
           only     0     0     0
          thing     0     0     0
           that     #     0     0
             is     0     0     0
         really     0     0     0
           sort     0     0     0
             of     0     0     0
         common     0     0     0
          among     0     0     0
            all     0     0     0
            the     0     0     0
         versi-     0     0     -
            the     0     0     0
        various     0     0     0
       versions     0     0     0
             of     0     0     0
           this     0     0     0
           data     0     0     0
             is     0     0     0
            the     0     0     0
           word     0     0     0
       sequence     #     ,     .
             or     0     0     0
  approximately     #     .    ==
             Or     0     0     0
            the     0     0     0
          times     0     .     .
            But     0     ,     0
            see     0     ,     0
             if     0     0     0
          you'd     0     0     0
       annotate     0     0     0
       dialogue     0     0     0
           acts     0     ,     0
            you     0     0     0
          don't     0     0     0
    necessarily     0     0     0
           want     0     0     0
             to     0     -     -
             or     0     0     0
         topics     0     -     -
            you     0     0     0
          don't     0     0     0
         really     0     0     0
           want     0     0     0
             to     0     0     0
             be     0     0     0
        dealing     0     0     0
           with     0     0     0
     time-marks     #     .     .
          You'd     0     -     -
           it's     0     0     0
           much     0     0     0
           more     0     0     0
      efficient     0     0     0
            for     0     0     0
           them     0     0     0
             to     0     0     0
           just     0     0     0
            see     0     0     0
            the     0     0     0
           word     0     0     0
       sequence     0     ,     |
          right     #     ?     ?
              I     0     0     0
           mean     0     ,     0
           most     0     0     0
         people     0     0     0
         aren't     0     0     0
             as     0     0     0
  sophisticated     0     0     0
             as     0     -     -
             as     0     0     0
             we     0     0     0
            are     0     0     0
           here     0     0     0
           with     0     ,     0
            you     0     0     0
           know     0     ,     0
             uh     0     ,     0
           time     0     0     0
     alignments     0     0     0
            and     0     0     0
          stuff     0     .     .
             So     #     -    ==
             So     0     0     0
            the     0     -     -
            the     0     -     -
            the     0     0     0
          point     0     0     0
             is     #     -    ==
          Right     #     .     .
             So     0     ,    ==
             um     0     ,    ==
            the     0     0     0
             p-     0     0     -
             my     0     0     0
          point     0     0     0
             is     0     0     0
           that     0     0     0
         you're     0     0     0
          gonna     0     0     0
            end     0     0     0
             up     0     0     0
           with     #     ,     0
             uh     0     ,     0
           word     0     0     0
      sequences     0     0     0
           that     0     0     0
            are     0     0     0
    differently     0     0     0
      annotated     0     .     .
            And     0     0     0
            you     0     0     0
           want     0     0     0
           some     0     0     0
           tool     #     ,     0
             uh     0     ,     0
           that     0     0     0
             is     0     0     0
           able     0     0     0
             to     0     0     0
           sort     0     0     0
             of     0     0     0
          merge     0     0     0
          these     0     0     0
      different     0     0     0
    annotations     0     0     0
           back     0     0     0
           into     0     0     0
              a     0     0     0
         single     #     ,     0
             uh     0     ,     0
        version     #     .     .
            O_K     #     ?     ?
             Um     0     ,     |
            and     0     0     0
             we     0     0     0
            had     0     0     0
           this     0     0     0
        problem     0     0     0
           very     0     0     0
      massively     0     ,     0
             uh     0     ,     0
             at     0     0     0
          S_R_I     0     0     0
           when     0     0     0
             we     0     0     0
         worked     0     ,     0
             uh     0     ,     0
              a     0     0     0
          while     0     0     0
           back     0     0     0
             on     #     ,     0
             uh     #     -     -
           well     0     ,     0
             on     0     0     0
       dialogue     0     0     0
           acts     0     0     0
             as     0     0     0
           well     0     0     0
             as     0     ,     0
             uh     0     ,     0
            you     0     0     0
           know     0     ,    ==
             um     0     ,     |
           what     0     0     0
            was     0     0     0
             it     0     ?     ?
             uh     #     ,    ==
      utterance     0     0     0
          types     0     .     .
        There's     0     ,     0
             uh     0     ,     0
      automatic     0     ,     0
             uh     0     ,     0
    punctuation     0     0     0
            and     0     0     0
          stuff     0     0     0
           like     0     0     0
           that     #     .     .
        Because     0     0     0
             we     0     0     0
            had     0     0     0
            one     0     0     0
            set     0     0     0
             of     0     0     0
    annotations     0     0     0
           that     0     0     0
           were     0     0     0
          based     0     0     0
             on     #     ,     0
             uh     0     ,     0
            one     0     0     0
        version     0     0     0
             of     0     0     0
            the     0     0     0
    transcripts     0     0     0
           with     0     0     0
              a     0     0     0
     particular     0     0     0
   segmentation     0     ,     .
            and     0     0     0
           then     0     0     0
             we     0     0     0
            had     0     0     0
        another     0     0     0
        version     0     0     0
           that     0     0     0
            was     0     0     0
          based     0     0     0
             on     #     ,     0
             uh     0     ,     0
              a     0     0     0
      different     0     0     0
             s-     0     0     -
       slightly     0     0     0
         edited     0     0     0
        version     0     0     0
             of     0     0     0
            the     0     0     0
    transcripts     0     0     0
           with     0     0     0
              a     0     0     0
      different     0     0     0
   segmentation     0     .     .
             So     #     ,     0
             we     0     0     0
            had     0     0     0
          these     0     0     0
            two     0     0     0
      different     #     0     0
       versions     0     0     0
          which     0     0     0
           were     0     -     -
            you     0     0     0
           know     0     ,     0
            you     0     0     0
          could     0     0     0
           tell     0     0     0
           they     0     0     0
           were     0     0     0
           from     0     0     0
            the     0     0     0
           same     0     0     0
         source     0     0     0
            but     0     0     0
           they     0     0     0
        weren't     0     0     0
      identical     0     .     .
             So     0     0     0
             it     0     0     0
            was     0     0     0
      extremely     0     0     0
           hard     #     0     0
             to     0     0     0
       reliably     0     0     0
          merge     0     0     0
          these     0     0     0
            two     0     0     0
           back     0     0     0
       together     0     0     0
             to     0     0     0
      correlate     0     0     0
            the     0     0     0
    information     0     0     0
           from     0     0     0
            the     0     0     0
      different     0     0     0
    annotations     #     .     .
             No     #     .     .
             No     0     .     .
            But     0     0     0
           once     0     0     0
            you     0     0     0
           have     0     0     0
              a     0     0     0
           file     0     0     0
         format     0     ,     0
              I     0     0     0
            can     0     0     0
        imagine     0     0     0
        writing     #     -     0
            not     0     0     0
     personally     0     ,     0
            but     0     0     0
        someone     0     0     0
        writing     0     0     0
              a     0     0     0
           tool     0     0     0
           that     0     0     0
             is     0     0     0
    essentially     0     0     0
             an     0     0     0
      alignment     0     0     0
           tool     #     ,     0
             um     0     ,     0
           that     0     0     0
       mediates     0     0     0
        between     0     0     0
        various     0     0     0
       versions     0     ,     .
            and     #     -     0
             uh     0     ,     0
           sort     0     0     0
             of     0     0     0
           like     0     0     0
            th-     0     0     -
             uh     0     ,     0
            you     0     0     0
           know     0     ,     0
            you     0     0     0
           have     0     0     0
           this     0     0     0
          thing     0     0     0
             in     0     0     0
           UNIX     0     0     0
          where     0     0     0
            you     0     0     0
           have     0     ,     0
             uh     #     ,     0
           diff     #     .     .
        There's     0     0     0
            the     0     ,     0
             uh     0     ,     0
           diff     0     0     0
           that     0     0     0
       actually     0     0     0
          tries     0     0     0
             to     0     0     0
      reconcile     0     0     0
      different     #     -     -
            two     0     0     0
          diffs     0     0     0
             f-     0     0     -
          based     0     0     0
             on     0     0     0
            the     0     0     0
           same     0     0     0
       original     #     .     .
      Something     0     0     0
           like     0     0     0
           that     #     ,     .
             um     0     ,     |
            but     0     0     0
      operating     0     0     0
             on     0     0     0
          these     0     0     0
       lattices     0     0     0
           that     0     0     0
            are     0     0     0
         really     0     0     0
         what's     0     0     0
         behind     0     0     0
           this     0     -     -
             uh     0     ,     0
           this     0     0     0
     annotation     0     0     0
         format     #     .     .
             So     #     -    ==
             So     0     0     0
      somewhere     0     0     0
             in     0     0     0
            the     0     0     0
          A_P_I     0     0     0
            you     0     0     0
          would     0     0     0
           like     0     0     0
             to     0     0     0
           have     0     0     0
           like     0     0     0
              a     0     0     0
          merge     0     0     0
             or     0     0     0
           some     0     -     -
           some     0     0     0
       function     0     0     0
           that     0     0     0
         merges     0     0     0
            two     #     -     -
            two     0     0     0
       versions     #     .     .
          Right     #     .     .
             Is     #     -    ==
        Exactly     #     .     .
          Right     #     .     .
             So     0     -   - |
             so     0     0     0
           just     0     0     0
             to     0     0     0
            let     0     0     0
            you     0     0     0
           know     0     0     0
           what     0     0     0
             we     0     -     -
          where     0     0     0
             we     0     0     0
         kluged     0     0     0
             it     0     0     0
             by     0     ,     0
             uh     0     ,     0
          doing     #     -     -
             uh     0     ,     0
             by     0     0     0
          doing     0     -     -
            Hhh     #     .    ==
           Both     0     0     0
           were     0     0     0
          based     0     0     0
             on     0     0     0
          words     0     ,     .
             so     0     ,     0
            bo-     0     0     -
             we     0     0     0
           have     0     0     0
            two     0     0     0
       versions     0     0     0
             of     0     0     0
            the     0     0     0
           same     0     0     0
          words     0     0     0
       intersp-     0     0     -
            you     0     0     0
           know     0     ,     0
      sprinkled     0     0     0
           with     0     -     -
           with     0     0     0
      different     0     0     0
           tags     0     0     0
            for     0     0     0
    annotations     #     .     .
            And     0     0     0
             we     0     0     0
            did     0     0     0
           diff     0     .     .
        Exactly     #     !     .
            And     0     0     0
         that's     0     0     0
            how     0     -    ==
           Yeah     #     .     .
            But     0     ,     0
            you     0     0     0
           know     0     ,     0
             it     0     0     0
            had     0     0     0
           lots     0     0     0
             of     0     0     0
         errors     0     0     .
            and     0     0     0
         things     0     0     0
          would     0     0     0
            end     0     0     0
             up     0     0     0
             in     0     0     0
            the     0     0     0
          wrong     0     0     0
          order     0     ,     0
            and     0     0     0
             so     0     0     0
          forth     0     .     .
             Uh     0     ,    ==
             so     #     ,    ==
             um     0     ,     |
             if     0     0     0
            you     0     0     0
            had     0     0     0
              a     0     0     0
           more     #     -    ==
             Uh     0     ,    ==
             it     0     -     -
             it     0     0     0
            was     0     0     0
              a     0     0     0
          kluge     0     0     .
        because     0     0     0
             it     0     0     0
            was     0     0     0
      basically     0     0     0
       reducing     0     0     0
     everything     0     0     0
             to     0     -     -
             uh     0     ,     0
             to     0     -     -
             uh     0     ,     0
             uh     0     ,     0
             to     0     0     0
        textual     0     0     0
      alignment     #     .     .
             Um     0     ,    ==
             so     #     -    ==
            And     0     0     0
         you're     0     0     0
          gonna     0     0     0
            get     0     0     0
           that     0     0     .
        because     0     0     0
             if     0     0     0
            the     0     0     0
           data     0     0     0
           gets     0     0     0
            out     0     ,     0
         people     0     0     0
           will     0     0     0
             do     0     0     0
            all     0     0     0
          kinds     0     0     0
             of     0     0     0
         things     0     0     0
             to     0     0     0
             it     #     .     .
            And     0     ,     0
             uh     0     ,     0
             s-     0     0     -
            you     0     0     0
           know     0     ,     0
        several     0     0     0
          years     0     0     0
           from     0     0     0
            now     0     0     0
            you     0     0     0
          might     0     0     0
           want     0     0     0
             to     0     0     0
           look     0     0     0
           into     0     ,     0
             um     #     ,     0
            the     0     0     0
        prosody     0     0     0
             of     #     0     0
      referring     0     0     0
    expressions     0     .     .
            And     0     0     0
        someone     0     0     0
             at     0     0     0
            the     0     0     0
     university     0     0     0
             of     0     0     0
            who     0     0     0
          knows     0     0     0
          where     0     0     0
            has     0     0     0
      annotated     0     0     0
            the     0     0     0
      referring     0     0     0
    expressions     #     .     .
             So     0     0     0
            you     0     0     0
           want     0     0     0
             to     0     0     0
            get     0     0     0
           that     0     0     0
     annotation     0     0     0
            and     0     0     0
          bring     0     0     0
             it     0     0     0
           back     0     0     0
             in     0     0     0
           line     0     0     0
           with     0     0     0
           your     0     0     0
           data     #     .     .
            O_K     #     ?     ?
           Yeah     #     .     .
          Right     #     .     .
           Time     0     -     -
           time     0     -     -
          times     0     0     0
            are     #     0     0
      ephemeral     #     .     .
             Um     #     -    ==
         Mm-hmm     #     .     .
           Yeah     #     .     .
           Yeah     #     .     .
             Or     0     0     0
            she     #     .     .
            Mmm     0     .     .
         Mm-hmm     #     .     .
         Mm-hmm     #     .     .
             Ah     0     ,     0
           well     0     .     .
            For     0     0     0
            th-     0     0     -
            for     0     0     0
            the     0     -     -
            for     0     0     0
            the     0     0     0
        benefit     0     0     0
             of     0     0     0
        science     0     0     0
          we'll     0     0     0
           read     0     0     0
            the     0     0     0
         digits     #     .     .
