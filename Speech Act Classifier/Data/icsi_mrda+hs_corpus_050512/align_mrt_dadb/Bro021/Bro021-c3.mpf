                SEGMENT PUNCTUATION
           WORD   MRT   MRT  DADB  
-----------------------------------
           Yeah     #     .     .
            Mmm     #     .     .
           Yeah     #     .     .
             @@     #     0   XXX
            Hmm     #     .     .
             @@     #     0   XXX
            You     0     0     0
           mean     0     0     0
            the     #     -    ==
            The     0     -     -
       whatever     0     0     0
            you     0     ,     0
             uh     0     ,     0
         tested     0     0     0
           with     0     0     0
       recently     0     .     |
          Right     #     ?     ?
           Yeah     #     ?     ?
            The     0     0     0
         number     0     0     0
             of     0     0     0
       cepstral     0     0     0
   coefficients     0     0     0
             is     0     0     0
           what     #     ?     ?
           Yeah     #     .     .
           Yeah     #     .     .
             Uh     0     ,     |
             so     0     0     0
            the     0     -     -
            the     0     -     -
          right     0     0     0
            now     0     ,     0
            the     0     -     -
            the     0     0     0
         system     0     0     0
           that     0     0     0
             is     0     0     0
          there     0     0     0
             in     0     0     0
            the     #     -     -
           what     0     0     0
             we     0     0     0
           have     0     0     0
             in     0     0     0
            the     0     0     0
   repositories     0     ,     0
           with     0     -     -
           uses     0     0     0
        fifteen     #     .     .
           Yeah     0     ,     .
             so     0     -     -
           Yeah     0     ,     .
             so     0     -     -
            Yep     #     .     .
           Yeah     0     ,     0
           yeah     0     .     .
             So     #     -    ==
           Yeah     0     .     .
           Well     0     .     .
           Yeah     #     .     .
             So     0     ,     0
             we     0     0     0
        haven't     0     -     -
             w-     0     0     -
             we     0     0     0
           have     0     0     0
           been     0     0     0
         always     0     0     0
          using     0     ,     0
             uh     0     ,     0
        fifteen     0     0     0
   coefficients     0     ,     .
            not     0     0     0
       thirteen     0     ?     .
           Yeah     #     .     .
           Well     0     ,     0
             uh     0     ,     |
         that's     0     -     -
    something's     #     -    ==
             Um     0     .    ==
           Yeah     #     .     .
           Then     #     -    ==
            mmm     0     -    ==
             @@     #     0   XXX
           Yeah     0     .     |
            Ma-     0     0     -
          maybe     0     0     0
             we     0     0     0
            can     0     -     -
              I     0     0     0
           mean     0     ,     0
             at     0     0     0
          least     #     ,    ==
             um     0     ,     |
           I'll     0     0     0
             t-     0     0     -
             s-     0     0     -
            run     0     0     0
           some     0     0     0
    experiments     0     0     0
             to     0     0     0
            see     0     0     0
        whether     0     -     -
           once     0     0     0
              I     0     0     0
           have     0     0     0
           this     #     0     0
          noise     0     0     0
   compensation     0     0     0
             to     0     0     0
            see     0     0     0
        whether     0     0     0
       thirteen     0     0     0
            and     0     0     0
        fifteen     0     0     0
         really     0     0     0
        matters     0     0     0
             or     0     0     0
            not     #     .     .
          Never     0     0     0
         tested     0     0     0
             it     0     0     0
           with     0     0     0
            the     0     0     0
   compensation     0     ,     .
            but     0     0     0
        without     #     ,     0
             uh     0     ,     0
   compensation     0     0     0
             it     0     0     0
            was     0     0     0
           like     0     0     0
        fifteen     0     0     0
            was     0     0     0
             s-     0     0     -
       slightly     0     0     0
         better     0     0     0
           than     0     0     0
       thirteen     0     ,     .
             so     0     0     0
         that's     0     0     0
            why     0     0     0
             we     0     0     0
          stuck     0     0     0
             to     0     0     0
       thirteen     #     .     .
          Sorry     0     ,     .
        fifteen     #     .     .
           Yeah     0     ,     |
            the     0     0     0
            log     0     0     0
         energy     0     0     0
         versus     0     0     0
         C_zero     #     .     .
             Uh     0     ,     0
         that's     0     -     -
         that's     0     0     0
            the     0     0     0
          other     0     0     0
          thing     0     .     .
              I     0     0     0
           mean     0     ,     0
        without     0     0     0
          noise     0     0     0
   compensation     0     0     0
      certainly     0     0     0
         C_zero     0     0     0
             is     0     0     0
         better     0     0     0
           than     0     0     0
            log     0     0     0
         energy     #     .     .
            Be-     0     0     -
              I     0     0     0
           mean     0     ,     0
        because     0     0     0
            the     0     -     -
          there     0     0     0
            are     0     0     0
           more     0     ,     0
             uh     0     ,     0
     mismatched     0     0     0
     conditions     0     0     0
           than     0     0     0
            the     0     0     0
       matching     0     0     0
     conditions     0     0     0
            for     0     0     0
        testing     #     .     .
            You     0     0     0
           know     0     ,     .
         always     0     0     0
            for     0     0     0
            the     0     0     0
        matched     0     0     0
      condition     0     ,     0
            you     0     0     0
         always     0     0     0
            get     0     0     0
              a     0     0     0
       slightly     0     0     0
         better     0     0     0
    performance     0     0     0
            for     0     0     0
            log     0     0     0
         energy     0     0     0
           than     0     0     0
         C_zero     #     .     .
            But     0     0     0
            not     0     0     0
            for     0     -    ==
              I     0     0     0
           mean     #     ,     0
            for     0     0     0
        matched     0     0     0
            and     0     0     0
            the     0     0     0
          clean     0     0     0
      condition     0     0     0
           both     0     ,     0
            you     0     0     0
            get     0     0     0
            log     0     0     0
         energy     #     -     .
              I     0     0     0
           mean     0     0     0
            you     0     0     0
            get     0     0     0
              a     0     0     0
         better     0     0     0
    performance     0     0     0
           with     0     0     0
            log     0     0     0
         energy     #     .     .
           Well     0     ,     0
             um     0     ,     |
          maybe     0     0     0
           once     0     0     0
             we     0     0     0
           have     0     0     0
           this     0     0     0
          noise     0     0     0
   compensation     0     ,     0
              I     0     0     0
          don't     0     0     0
           know     0     ,     0
             we     0     0     0
           have     0     0     0
             to     0     0     0
            try     0     0     0
           that     0     0     0
           also     0     ,     0
        whether     0     0     0
             we     0     0     0
           want     0     0     0
             to     0     0     0
             go     0     0     0
            for     0     0     0
         C_zero     0     0     0
             or     0     0     0
            log     0     0     0
         energy     #     .     .
             We     0     0     0
            can     0     0     0
            see     0     0     0
           that     #     .     .
            Hmm     #     .    ==
         Mm-hmm     #     .     .
         Mm-hmm     #     .     .
             So     0     ,     0
             um     0     ,     |
           I've     0     0     0
           been     0     ,     0
             uh     0     ,     0
   implementing     0     0     0
           this     0     ,     0
             uh     0     ,     0
         Wiener     0     0     0
      filtering     0     0     0
            for     0     0     0
           this     0     0     0
         Aurora     0     0     0
           task     #     .     .
            And     0     ,     0
             uh     #     ,    ==
              I     0     -     -
              I     0     0     0
       actually     0     0     0
        thought     0     0     0
             it     0     0     0
            was     0     -     -
             it     0     0     0
            was     0     0     0
          doing     #     0     0
           fine     0     0     0
           when     0     0     0
              I     0     0     0
         tested     0     0     0
             it     0     0     0
           once     0     .     .
             I-     0     0     -
           it's     0     ,     0
           like     0     ,     0
          using     0     0     0
              a     0     0     0
          small     0     0     0
        section     0     0     0
             of     0     0     0
            the     0     0     0
           code     0     .     .
            And     0     0     0
           then     0     0     0
              I     0     0     0
            ran     0     0     0
            the     0     0     0
          whole     0     0     0
    recognition     0     0     0
     experiment     0     0     0
           with     0     0     0
        Italian     0     0     .
            and     0     0     0
              I     0     0     0
            got     #     ,     0
           like     0     ,     0
          worse     0     0     0
        results     0     0     0
           than     0     0     0
            not     0     0     0
          using     0     0     0
             it     #     .     .
           Then     0     0     0
              I     #     -    ==
             So     0     ,     0
           I've     0     0     0
           been     0     0     0
         trying     0     0     0
             to     0     0     0
           find     0     0     0
          where     0     0     0
            the     0     0     0
        problem     0     0     0
           came     0     0     0
           from     0     .     .
            And     0     0     0
           then     0     0     0
             it     0     0     0
          looks     0     0     0
           like     0     0     0
              I     0     0     0
           have     0     0     0
           some     0     0     0
        problem     0     0     0
             in     #     0     0
            the     0     0     0
            way     0     -     .
          there     0     0     0
             is     0     0     0
           some     0     -     -
           some     0     0     0
           very     0     0     0
          silly     0     0     0
            bug     0     0     0
      somewhere     0     .     .
            And     0     ,     0
            ugh     #     !     !
              I     0     -     -
              I     0     0     0
           mean     0     ,     0
             i-     0     0     -
             uh     0     ,     0
             it     0     0     0
       actually     0     -     -
             i-     0     0     -
             it     0     0     0
       actually     0     0     0
           made     0     0     0
            the     0     0     0
          whole     0     0     0
          thing     0     0     0
          worse     0     .     .
              I     0     0     0
            was     0     0     0
        looking     0     0     0
             at     0     0     0
            the     0     0     0
   spectrograms     0     0     0
           that     0     0     0
              I     0     0     0
            got     #     0     .
            and     0     0     0
           it's     0     ,     0
           like     0     -     -
             w-     0     0     -
           it's     0     -     -
           it's     0     0     0
           very     0     0     0
       horrible     0     .     .
           Like     0     ,     0
           when     0     0     0
              I     #     -    ==
             Oh     0     ,     0
              I     0     0     0
           mean     #     -    ==
             Oh     0     ,     0
           yeah     0     .     .
              I     0     0     0
       actually     0     0     0
    implemented     0     0     0
            the     0     0     0
         Wiener     0     0     0
             f-     0     0     -
             f-     0     0     -
           fil-     0     0     -
      filtering     0     0     0
             as     0     0     0
              a     0     0     0
         module     0     0     0
            and     0     0     0
           then     0     0     0
         tested     0     0     0
             it     0     0     0
            out     0     0     0
     separately     0     .     .
            And     0     0     0
             it     0     -     -
             it     0     -     -
             it     0     0     0
           gave     0     ,     0
           like     0     -     -
              I     0     0     0
           just     0     0     0
            got     0     0     0
            the     0     0     0
         signal     0     0     0
            out     0     0     .
            and     0     0     0
             it     0     -     -
             it     0     0     0
            was     0     0     0
            O_K     #     .     .
             So     0     ,     0
              I     0     0     0
        plugged     0     0     0
             it     0     0     0
             in     0     0     0
      somewhere     0     0     .
            and     0     0     0
           then     0     -     -
              I     0     0     0
           mean     0     ,     0
           it's     0     0     0
           like     0     0     0
              I     0     0     0
            had     0     0     0
             to     0     0     0
         remove     0     0     0
           some     0     0     0
           part     0     0     .
            and     0     0     0
           then     0     0     0
       plugging     0     0     0
             it     0     0     0
             in     0     0     0
      somewhere     0     .     .
            And     0     0     0
           then     0     0     0
              I     0     -     -
             in     0     0     0
           that     0     0     0
        process     0     0     0
              I     0     0     0
         messed     0     0     0
             it     0     0     0
             up     0     0     0
      somewhere     #     .     .
             So     #     .    ==
             So     0     ,     0
             it     0     0     0
            was     0     0     0
          real-     #     0    ==
              I     0     0     0
           mean     0     ,     0
              I     0     0     0
        thought     0     0     0
             it     0     0     0
            was     0     0     0
            all     0     0     0
           fine     0     0     .
            and     0     0     0
           then     0     0     0
              I     0     0     0
            ran     0     0     0
             it     0     ,     0
            and     0     0     0
              I     0     0     0
            got     0     0     0
      something     0     0     0
          worse     0     0     0
           than     0     0     0
            not     0     0     0
          using     0     0     0
             it     #     .     .
             So     0     ,    ==
              I     0     0     0
            was     0     0     0
           like     0     -     -
            I'm     0     0     0
         trying     0     0     0
             to     0     0     0
           find     0     0     0
          where     0     0     0
            the     0     0     0
             m-     0     0     -
             m-     0     0     -
        problem     0     0     0
           came     0     ,     .
            and     0     0     0
             it     0     0     0
          seems     0     0     0
             to     0     0     0
             be     0     ,     0
           like     0     ,     0
      somewhere     0     -     .
           some     0     0     0
          silly     0     0     0
          stuff     #     .     .
            And     0     ,     0
             um     0     ,     |
            the     0     0     0
          other     0     0     0
          thing     0     ,     0
             uh     0     ,     0
            was     0     ,     0
             uh     0     ,     0
             uh     #     -    ==
           Well     0     ,     0
          Hynek     0     0     0
         showed     0     0     0
             up     0     0     0
            one     0     -     -
       suddenly     0     0     0
             on     0     0     0
            one     0     0     0
            day     0     0     .
            and     0     0     0
           then     0     0     0
              I     0     0     0
            was     0     0     0
             t-     0     0     -
        talking     0     0     0
            wi-     #     0    ==
             Uh     0     ,     0
           yeah     0     .     .
             So     0     0     0
              I     0     0     0
            was     0     0     0
       actually     0     -     -
           that     0     0     0
            day     0     0     0
              I     0     0     0
            was     0     0     0
       thinking     0     0     0
          about     0     0     0
             d-     0     0     -
          doing     0     0     0
      something     0     0     0
          about     0     0     0
            the     0     0     0
         Wiener     0     0     0
      filtering     0     ,     0
            and     0     0     0
           then     0     0     0
         Carlos     0     0     0
         matter     0     0     0
             of     #     0     0
          stuff     0     .     .
            And     0     0     0
           then     0     0     0
             he     0     0     0
         showed     0     0     0
             up     0     0     .
            and     0     0     0
           then     0     0     0
              I     0     0     0
           told     0     0     0
            him     0     .     .
            And     0     0     0
           then     0     0     0
             he     0     0     0
           gave     0     0     0
             me     0     0     0
              a     0     0     0
          whole     0     0     0
          bunch     0     0     0
             of     0     0     0
        filters     0     -     .
           what     0     0     0
         Carlos     0     0     0
           used     0     0     0
            for     0     0     0
            his     0     ,     0
             uh     #     ,     0
             uh     0     ,     0
         thesis     0     0     .
            and     0     0     0
           then     0     0     0
           that     0     0     0
            was     0     0     0
      something     0     0     0
          which     0     0     0
           came     0     0     0
             up     0     .     .
            And     0     0     0
           then     0     ,     0
             um     #     -    ==
             So     0     ,     0
             uh     0     ,     0
            I'm     0     0     0
       actually     #     ,     0
             uh     0     ,     0
       thinking     0     0     0
             of     0     0     0
          using     0     0     0
           that     0     0     0
           also     0     0     0
             in     0     0     0
           this     0     ,     0
             uh     #     ,     0
             W-     0     0     -
         Wiener     0     0     0
      filtering     0     0     .
        because     0     0     0
           that     0     0     0
             is     0     0     0
              a     0     0     0
             m-     0     0     -
       modified     0     0     0
         Wiener     0     0     0
      filtering     0     0     0
       approach     0     ,     .
          where     0     0     0
        instead     0     0     0
             of     0     0     0
          using     0     0     0
            the     0     0     0
        current     0     0     0
          frame     0     ,     0
             it     0     0     0
           uses     #     0     0
       adjacent     0     0     0
         frames     0     0     0
           also     0     0     0
             in     0     0     0
      designing     0     0     0
            the     0     0     0
         Wiener     0     0     0
         filter     #     .     .
             So     0     0     0
        instead     0     0     0
             of     0     0     0
      designing     0     0     0
            our     0     0     0
            own     0     0     0
            new     0     0     0
         Wiener     0     0     0
        filters     0     ,     0
              I     0     0     0
            may     0     0     0
           just     0     0     0
            use     0     0     0
            one     0     0     0
             of     0     0     0
          those     0     0     0
         Carlos     0     0     0
        filters     0     0     0
             in     0     -     -
             in     0     0     0
           this     0     0     0
 implementation     0     0     .
            and     0     0     0
            see     0     0     0
        whether     0     0     0
             it     0     -     -
             it     0     0     0
       actually     0     0     0
          gives     0     0     0
             me     0     0     0
      something     0     0     0
         better     #     0     .
           than     0     0     0
          using     0     0     0
           just     0     0     0
            the     0     0     0
        current     0     0     0
             f-     0     0     -
        current     0     0     0
          frame     0     ,     .
          which     0     0     0
             is     0     0     0
             in     0     0     0
              a     0     0     0
            way     0     ,     0
             uh     0     ,     0
      something     0     0     0
           like     0     0     0
            the     0     0     0
      smoothing     0     -     -
            the     0     0     0
         Wiener     0     0     0
         filter     #     -     .
            but     0     0    ==
             @@     #     -   XXX
             S-     0     0     -
             so     0     ,     0
              I     0     0     0
          don't     0     0     0
           know     0     ,     .
              I     0     0     0
            was     0     0     0
             h-     0     0    ==
            I'm     0     -     -
            I'm     0     -     -
            I'm     0     ,     0
           like     #     -    ==
           that     0     -     -
             so     0     0     0
           that     0     0     0
             is     0     0     0
            the     0     0     0
           next     0     0     0
          thing     0     .     0
           Once     0     0     0
           this     0     -     -
              I     0     -     -
           once     0     0     0
              I     0     0     0
           sort     0     0     0
           this     0     0     0
           pro-     0     0     -
             uh     0     ,     0
        problem     0     0     0
            out     0     0     0
          maybe     0     0     0
           I'll     0     0     0
           just     0     0     0
             go     0     0     0
           into     0     0     0
           that     0     0     0
           also     #     .     .
            And     #     0    ==
            the     0     -     -
            the     0     0     0
          other     0     0     0
          thing     0     0     0
            was     0     0     0
          about     0     0     0
            the     0     0     0
       subspace     0     0     0
       approach     #     .     .
             So     0     ,     0
             um     #     ,    ==
              I     0     ,     0
           like     0     ,     0
        plugged     0     0     0
           some     0     0     0
      groupings     0     0     0
            for     0     0     0
      computing     0     0     0
           this     0     0     0
         eigen-     0     0     -
             uh     #     ,     0
             uh     0     ,     0
             uh     0     ,     0
             s-     0     0     -
         values     0     0     0
            and     0     0     0
   eigenvectors     0     .     .
             So     0     0     0
           just     #     -     -
              I     0     0     0
           just     0     0     0
             @@     0     0   XXX
           some     0     0     0
          small     0     0     0
          block     0     0     0
             of     0     0     0
         things     0     0     0
          which     0     0     0
              I     0     0     0
         needed     0     0     0
             to     0     0     0
            put     0     0     0
       together     0     0     0
            for     #     0     0
            the     0     0     0
       subspace     0     0     0
       approach     0     .     .
            And     0     0     0
            I'm     0     0     0
             in     0     0     0
            the     0     0     0
        process     0     0     0
             of     0     ,     0
           like     0     ,     0
       building     0     0     0
             up     0     0     0
           that     0     0     0
          stuff     #     .     .
            And     0     ,     0
             um     #     ,    ==
             uh     0     -     -
           Yeah     #     .     .
              I     0     0     0
          guess     0     -     -
            Yep     0     .     0
              I     0     0     0
          guess     0     0     0
         that's     0     0     0
             it     0     .     .
            And     0     ,     0
             uh     0     ,     0
            th-     0     0     -
            th-     0     0     -
         that's     0     0     0
          where     0     0     0
              I     0     0     0
             am     0     0     0
          right     0     0     0
            now     #     .     .
             So     #     .    ==
            New     #     -    ==
            Mmm     #     .     .
            Mmm     #     .     .
            One     0     -     -
            one     0     0     0
           plus     0     0     0
             N_     0     0     0
             by     0     0     0
             X_     #     .     .
            One     0     0     0
           plus     0     0     0
             N_     0     0     0
             by     0     0     0
             X_     #     .     .
             Uh     0     ,     0
            and     #     -    ==
            And     0     ,     0
            log     0     0     0
             of     #     -    ==
         Mm-hmm     #     .     .
             No     #     .     .
           Well     0     ,     0
             if     0     0     0
             E_     0     0     0
      restricts     #     -    ==
             It     0     0     0
             is     0     0     0
             y-     #     0    ==
           What     0     0     0
             is     0     ,     0
             uh     #    -?   ?==
            The     0     0     0
            log     #     -     .
            the     0     0     0
         Taylor     0     0     0
         series     0     0     0
      expansion     0     0     0
            for     0     0     0
            log     0     0     0
            one     0     0     0
           plus     0     0     0
             N_     0     0     0
             by     0     0     0
             X_     0     0     0
             is     #     -    ==
           Yeah     0     ,     0
            the     0     0     0
          first     0     0     0
            one     0     .     .
           Yeah     #     .     .
           Yeah     #     .     .
             Y-     0     0     -
           yeah     0     .     0
             If     0     -     -
             if     0     0     0
            you     0     0     0
           take     0     0     0
            log     0     0     0
             X_     0     0     0
           into     0     0     0
            log     0     0     0
            one     0     0     0
           plus     0     0     0
             N_     0     0     0
             by     0     0     0
             X_     0     ,     0
            and     0     0     0
           then     0     0     0
         expand     0     0     0
            the     0     0     0
            log     0     0     0
            one     0     0     0
           plus     0     0     0
             N_     0     0     0
             by     0     0     0
             X_     0     0     0
           into     0     0     0
         Taylor     0     0     0
         series     #     -     .
            Mmm     #     .     .
             No     #     .     .
             Uh     #     .     .
             X_     0     .     0
             X_     0     .     .
           This     0     0     0
             is     0     0     0
             X_     0     ,     0
         inside     #     .     .
            One     0     0     0
            and     #     -    ==
             X_     0     0     0
             K_     0     0     0
             C_     0     0     0
          noise     #     .     .
           Weak     0     .     .
             So     0     0     0
       probably     0     0     0
             it     0     -     -
             it     0     0     0
          would     0     0     0
             do     0     0     0
           that     #     .     .
           It's     0     0     0
    overlapping     #     .     .
             @@     #     0   XXX
             S-     #     0    ==
             S-     0     0     -
             so     0     ,     0
             we     0     0     0
         switch     0     0     0
            off     0     0     0
           with     0     0     0
           this     0     0     ?
             or     0     0     0
             n-     #     ?   ?==
             No     0     .     0
            O_K     #     .     .
            O_K     0     .     .
            O_K     #     .     .
