                SEGMENT PUNCTUATION
           WORD   MRT   MRT  DADB  
-----------------------------------
            How     0     0     0
           many     0     0     0
      batteries     0     0     0
             do     0     0     0
            you     0     0     0
             go     0     0     0
        through     #     ?     ?
              I     0     0     0
             am     0     0     0
            Sm-     0     0     -
              I     0     0     0
             am     0     0     0
      Smarticus     0     0     0
             is     0     0     0
           what     0     0     0
           it's     0     0     0
         saying     0     .     .
              I     0     0     0
           gue-     #     0    ==
           Yeah     0     .     .
             So     0     .     0
            Bu-     0     0     -
             Uh     0     ,     0
             i-     0     0     -
            The     0     0     0
            way     0     0     0
            the     0     0     0
             uh     0     ,     -
            the     0     0     0
       dialogue     0     0     0
        manager     0     0     0
          works     0     0     0
             is     0     0     0
             it     0     0     0
          dumps     0     0     0
            out     0     0     0
           what     0     0     0
             it     0     0     0
          wants     0     0     0
             to     0     0     0
           know     0     ,     0
             or     0     0     0
           what     0     0     0
             it     0     0     0
          wants     0     0     0
             to     0     0     0
           tell     0     0     0
            the     0     0     0
         person     #     ,     0
             to     0     0     0
              a     0     -     -
             er     0     0     0
             in     0     0     0
          X_M_L     #     0     .
            and     0     0     0
        there's     0     0     0
              a     0     0     0
     conversion     0     0     0
         system     0     0     0
            for     0     0     0
      different     #     0     0
             uh     0     ,     -
             to     0     0     0
             go     0     0     0
           from     0     0     0
          X_M_L     0     0     0
             to     0     0     0
      something     0     0     0
           else     0     .     .
            And     0     0     0
            th-     0     0     -
             so     0     ,     0
            the     0     0     0
      knowledge     0     0     0
           base     #     0     0
            for     0     0     0
            the     0     0     0
         system     #     ,     0
           that     0     0     0
      generates     0     0     0
            the     0     0     0
      syntasti-     0     0     -
      syntactic     0     0     0
     structures     0     0     0
            for     0     0     0
            the     0     0     0
            ge-     0     0     -
     generation     0     0     0
             is     0     0     0
             uh     #     ,     -
             in     0     0     0
              a     0     0     0
      LISP-like     0     -     -
            the     0     0     0
      knowledge     0     0     0
           base     0     0     0
             is     0     0     0
             in     0     0     0
              a     0     0     0
      LISP-like     0     0     0
           form     0     .     .
            And     0     0     0
           then     0     0     0
            the     0     0     0
          thing     0     0     0
           that     0     0     0
       actually     0     0     0
         builds     0     0     0
          these     0     0     0
      syntactic     0     0     0
     structures     0     0     0
             is     #     0     0
      something     0     0     0
          based     0     0     0
             on     0     0     0
         Prolog     #     .     .
             So     0     ,     0
            you     0     0     0
           have     0     0     0
              a     0     -     -
      basically     0     ,     0
              a     0     0     0
           goal     0     0     .
            and     0     0     0
             it     0     ,     0
            you     0     0     0
           know     0     ,     0
           says     0     0     0
            O_K     0     ,     0
           well     0     0     0
            I'm     0     0     0
          gonna     0     0     0
            try     0     0     0
             to     0     0     0
             do     0     0     0
            the     #     0     0
Greet-the-person     0     0     0
           goal     0     ,     .
             so     0     0     0
             it     0     0     0
           just     0     0     0
         starts     0     -     0
             uh     0     ,     -
             it     0     0     0
          binds     0     0     0
           some     0     0     0
      variables     0     0     0
            and     0     0     0
             it     0     0     0
           just     0     0     0
        decides     0     0     0
             to     0     ,     0
            you     0     0     0
           know     0     ,     0
             do     0     0     0
           some     0     0     0
       subscold     0     .     .
      Basically     0     ,     0
             it     0     0     0
           just     0     0     0
          means     0     0     0
          build     0     0     0
            the     0     0     0
           tree     #     .     .
            And     0     0     0
           then     0     0     0
             it     0     0     0
         passes     0     0     0
            the     0     0     0
           tree     0     0     0
           onto     0     ,     0
             uh     #     ,     -
            the     0     0     0
            ge-     0     0     -
            the     0     0     0
     generation     0     0     0
         module     #     .     .
            We-     0     0    ==
           yeah     0     .     .
             So     0     ,     0
            the     0     0     0
         syntax     0     0     0
          trees     0     0     0
            are     0     0     0
           very     0     0     0
         simple     0     .     .
           It's     0     0     0
           like     0     0     0
           most     0     0     0
             of     0     0     0
            the     0     0     0
      sentences     0     0     0
             in     0     0     0
            one     0     0     0
           tree     #     ,     .
            and     0     0     0
        instead     0     0     0
             of     0     ,     0
            you     0     0     0
           know     0     ,     0
       breaking     0     0     0
           down     0     0     0
             to     0     ,     0
           like     0     ,     0
          small     0     0     0
          units     0     0     0
            and     0     0     0
       building     0     0     0
           back     0     0     0
             up     0     ,     0
           they     0     0     0
      basically     0     0     0
           took     0     0     0
            the     0     0     0
      sentences     0     ,     0
            and     0     0     0
      basically     0     0     0
            cut     0     0     0
           them     0     0     0
             in     0     0     0
           half     0     ,     0
             or     0     0     0
            you     0     0     0
           know     0     ,     0
           into     0     0     0
         thirds     0     0     0
             or     0     0     0
      something     0     0     0
           like     0     0     0
           that     0     ,     0
            and     #     0     0
           made     0     0     0
          trees     0     0     0
            out     0     0     0
             of     0     0     0
          those     #     .     .
            And     0     0     0
             so     0     0     0
             uh     0     ,     -
             uh     0     0   - |
         Tilman     0     0     0
          wrote     0     0     0
              a     0     0     0
         little     0     0     0
           tool     0     0     0
           that     0     0     0
            you     0     0     0
          could     0     0     0
           take     #     0     0
           LISP     0     0     0
       notation     0     0     0
            and     0     0     0
       generate     0     0     0
             an     0     0     0
          X_M_L     0     ,     0
             uh     #     ,     -
           tree     #     .     0
             Uh     #     ,     -
             S-     0     0     -
           what     0     0     0
             do     0     0     0
            ca-     0     0     -
      structure     #     0     0
           from     0     0     0
            the     0     -     -
           from     0     0     0
            the     0     0     0
           LISP     #     .     .
            And     0     0     0
             so     0     0     0
      basically     0     0     0
            you     0     0     0
           just     0     0     0
            say     0     ,     0
            you     0     0     0
           know     #     ,     0
           noun     0     0     0
           goes     0     0     0
             to     0     ,     0
            you     0     0     0
           know     #     ,    ==
             Er     0     ,     0
            nah     0     ,     0
              I     0     0     0
          don't     0     0     0
            re-     0     0     -
           I've     0     0     0
          never     0     0     0
           been     0     0     0
           good     0     0     0
             at     0     0     0
          those     0     .     .
             So     0     0     0
        there's     0     0     0
           like     0     0     0
            the     0     0     0
            V_P     0     0     0
           goes     0     0     0
             to     0     0     0
             N_     0     0     0
            and     0     0     0
          those     0     0     0
         things     #     0     0
             in     0     0     0
           LISP     0     ,     0
            and     0     0     0
             it     0     0     0
           will     0     0     0
       generate     0     0     0
            for     0     0     0
            you     #     .     .
            Why     0     -     0
              I     0     0     0
            had     0     -     -
              I     0     0     0
            did     0     0     0
           need     0     0     0
             to     0     0     0
          chan-     0     0     -
       generate     0     0     0
      different     0     0     0
          trees     0     0     0
           than     0     0     0
            the     0     0     0
         German     0     0     0
           ones     0     ,     .
         mainly     0     0     0
        because     0     0     0
            you     0     0     0
           know     0     0     0
           like     #     0     0
             uh     0     ,     0
            the     0     0     0
         gerund     0     0     0
             in     0     -     -
             in     0     0     0
         German     0     0     0
             is     0     0     0
  automatically     0     0     0
          taken     0     0     0
           care     0     0     0
             of     0     0     0
           with     0     0     0
           just     0     0     0
              a     0     0     0
        regular     0     0     0
           verb     #     ,     .
             so     0     0     0
            I'd     0     0     0
             uh     0     0     -
           have     0     0     0
             to     0     0     0
            add     0     0     0
             am     0     0     0
        walking     0     ,     .
             or     0     0     0
            I'd     0     0     0
           have     0     0     0
             to     0     0     0
            add     0     0     0
              a     0     0     0
         little     0     0     0
           stem     0     0     0
            for     0     0     0
            the     0     0     0
             am     #     ,     0
           when     0     0     0
              I     0     0     0
          build     0     0     0
            the     0     -     -
          built     0     0     0
            the     0     0     0
           tree     #     .     .
           Yeah     #     .     .
           Well     0     0     0
         Tilman     0     0     0
             s-     #     0    ==
            O_K     0     ,     0
            you     0     0     0
           know     0     0     0
            how     0     0     0
             to     0     0     0
             do     0     0     0
             it     #     ?     ?
            You     0     0     0
         should     0     0     0
       probably     0     0     0
           move     0     0     0
            the     0     0     0
     microphone     0     0     0
         closer     0     0     0
             to     0     0     0
           your     0     0     0
           face     #     .     .
        There's     0     0     0
           like     0     0     0
              a     0     0     0
         little     0     -     -
            The     0     0     0
         twisty     0     0     0
          thing     0     ,     0
            you     0     0     0
            can     0     0     0
           move     0     0     0
             it     0     0     0
           with     #     .     .
            Wa-     0     0    ==
             uh     #     -    ==
             To     0     0     0
           some     0     0     0
            de-     0     0    ==
             uh     0     0   - |
           what     0     -     -
           what     0     0     0
           part     0     0     0
             of     0     0     0
            th-     0     0     -
            the     0     0     0
       SmartKom     0     0     0
          stuff     #     ?     ?
             Oh     0     0     0
           yeah     0     -     -
           yeah     #     .     .
           Yeah     0     ,     0
              I     #     -    ==
              I     0     0     0
            did     0     0     0
           look     0     0     0
           into     0     0     0
           that     0     ,     0
             uh     0     0     -
             in     0     0     0
          terms     0     0     0
             of     0     ,     0
            you     0     0     0
           know     0     ,     0
      exploding     0     0     0
            the     0     0     0
          nodes     0     0     0
            out     0     0     0
            and     0     0     0
           down     0     0     0
            ag-     #     0    ==
      JavaBayes     0     0     0
           does     0     0     0
            not     0     0     0
        support     0     0     0
           that     #     .     .
              I     0     0     0
            can     #     0     0
        imagine     0     0     0
              a     0     0     0
            way     0     0     0
             of     0     0     0
        hacking     0     0     0
             at     0     0     0
            the     0     0     0
           code     0     0     0
             to     0     0     0
             do     0     0     0
           that     #     .     .
           It'd     0     0     0
       probably     0     0     0
           take     0     0     0
            two     0     0     0
          weeks     0     0     0
             or     0     0     0
             so     0     0     0
             to     0     0     0
       actually     0     0     0
             go     0     0     0
        through     0     0     0
            and     0     0     0
             do     0     0     0
             it     #     ,     .
            and     0     0     0
              I     0     0     0
           went     0     0     0
        through     0     0     0
            all     0     0     0
            the     0     0     0
          other     0     0     0
       packages     0     0     0
             on     0     0     0
         Murph-     0     0     -
          Kevin     0     0     0
       Murphy's     0     0     0
           page     0     ,     .
            and     0     0     0
              I     0     0     0
       couldn't     #     0     0
           find     0     0     0
            the     0     0     0
      necessary     0     0     0
            mix     0     0     0
             of     0     0     0
           free     0     0     0
            and     0     0     0
             uh     #     0     0
           with     0     0     0
            the     0     0     0
            GUI     0     0     0
            and     0     ,     0
           with     0     0     0
           this     0     0     0
          thing     0     0     0
           that     0     0     0
             we     0     0     0
           want     #     .     .
            O_K     #     .     .
            O_K     0     ,     |
             so     0     0     0
           then     0     0     0
           I'll     0     0     0
             go     0     0     0
           back     0     0     0
            and     0     0     0
           look     0     0     0
             at     0     0     0
            the     0     0     0
           ones     0     0     0
             on     0     0     0
            the     0     0     0
           list     0     0     0
           that     #     -    ==
            Mmm     #     .     .
            How     0     0     0
             do     0     0     0
            you     0     0     0
          spell     0     0     0
           that     #     ?     ?
            O_K     #     .     .
            Mmm     #     .     .
            Yes     #     .     .
             Oh     0     0     0
             no     #     .     .
             No     0     0     0
            sir     #     .     .
            Nnn     0     .    ==
           This     0     -     -
           Well     0     ,     0
           I've     0     -     -
              I     0     0     0
           have     0     0     0
       projects     0     ,     0
            but     0     0     0
           then     0     0     0
            the     0     -     -
             my     0     0     0
          prof-     0     0     -
      professor     0     0     0
             of     0     0     0
            one     0     0     0
             of     0     0     0
             my     0     0     0
        classes     0     0     0
           also     0     0     0
            wa-     0     0     -
            has     0     0     0
              a     0     0     0
          final     #     0     0
           that     0     0     0
           he's     0     0     0
         giving     0     0     0
             us     0     .     .
            And     0     0     0
           he's     0     0     0
         giving     0     0     0
             us     0     0     0
           five     0     0     0
           days     0     0     0
             to     0     0     0
             do     0     0     0
             it     0     0     0
          which     0     0     0
          means     #     0     0
             it     0     0     0
          going     0     0     0
             to     0     0     0
             be     0     0     0
           hard     #     .     .
           Yeah     0     .     .
          Aikin     0     ,     0
           Alex     0     ,     0
           yeah     #     .     .
             So     0     ,     0
            the     0     0     0
    seventeenth     0     0     0
           will     0     0     0
     definitely     0     0     0
             be     0     0     0
            the     0     0     0
           last     0     0     0
            day     0     ,     0
           like     0     0     0
             it     0     0     0
             or     0     0     0
            not     0     0     0
            for     0     0     0
             me     #     .     .
            O_K     #     .     .
             Hi     0     0     .
             @@     #     0     0
    Wednesday's     0     0     0
           much     0     0     0
         better     0     0     0
            for     0     0     0
             me     0     ,     0
           yeah     #     .     .
       Bhaskara     #     .     .
